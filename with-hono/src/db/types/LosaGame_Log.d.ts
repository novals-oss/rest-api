/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export interface LogCash {
  accountIDX: number;
  amount: number;
  applyType: string;
  DBID: string;
  idx: Generated<number>;
  note: string;
  regDate: Date;
  userIP: string;
}

export interface LogClassBuytime {
  buyTime: Generated<number>;
  classType: Generated<number>;
  idx: Generated<number>;
  regDate: Generated<Date>;
}

export interface LogClassRentalHistory {
  accountIDX: number;
  classType: Generated<number>;
  friendIDX: number;
  idx: Generated<number>;
  regDate: Generated<Date>;
}

export interface LogDataClover {
  accountIDX: number;
  CloverCount: number;
  eventType: number;
  friendIDX: Generated<number>;
  idx: Generated<number>;
  regDate: Generated<Date>;
}

export interface LogEventMarble {
  accountidx: number;
  cpType: number;
  idx: Generated<number>;
  regDate: Generated<Date>;
  userID: string;
}

export interface LogEventOpenbetaCoin {
  accountIDX: number;
  coin: number;
  flag: Generated<number>;
  idx: Generated<number>;
  regDate: Generated<Date>;
}

export interface LogGuildMark {
  accountIDX: number;
  changemark: number;
  flag: Generated<number>;
  guildIDX: number;
  havepeso: number;
  idx: Generated<number>;
  markprice: number;
  nowmark: number;
  regDate: Generated<Date>;
  userIP: string | null;
}

export interface LogLeagueCheer {
  accountIDX: number;
  cheerIDX: number;
  idx: Generated<number>;
  insertDate: Generated<Date>;
  leagueIDX: number;
  regDate: Date;
  startDate: number;
  teamIDX: number;
}

export interface LogLeagueInfoUser {
  announce: string | null;
  autoType: number | null;
  bannerA: number | null;
  bannerB: number | null;
  idx: Generated<number>;
  infoIDX: number | null;
  insertDate: Generated<Date>;
  leagueIDX: number | null;
  leagueName: string | null;
  maxcount: number | null;
  maxRound: number | null;
  modeType: number | null;
  recruitDate: number | null;
  regDate: Date | null;
  waitDate: number | null;
}

export interface LogLeagueList {
  accountIDX: number | null;
  endDate: number | null;
  idx: Generated<number>;
  insertDate: Generated<Date>;
  leagueIDX: number | null;
  leagueState: number | null;
  leagueType: number | null;
  regDate: Date | null;
  startDate: number | null;
}

export interface LogLeagueListUser {
  accountIDX: number | null;
  endDate: number | null;
  idx: Generated<number>;
  insertDate: Generated<Date>;
  leagueIDX: number | null;
  leagueState: number | null;
  leagueType: number | null;
  regDate: Date | null;
  startDate: number | null;
}

export interface LogLeagueRoundUser {
  idx: Generated<number>;
  infoIDX: number | null;
  insertDate: Generated<Date>;
  regDate: Date | null;
  roundIDX: number | null;
  roundType1_playDate: number | null;
  roundType1_presentCode1: number | null;
  roundType1_presentCode2: number | null;
  roundType1_presentCode3: number | null;
  roundType1_presentCode4: number | null;
  roundType10_playDate: number | null;
  roundType10_presentCode1: number | null;
  roundType10_presentCode2: number | null;
  roundType10_presentCode3: number | null;
  roundType10_presentCode4: number | null;
  roundType11_playDate: number | null;
  roundType11_presentCode1: number | null;
  roundType11_presentCode2: number | null;
  roundType11_presentCode3: number | null;
  roundType11_presentCode4: number | null;
  roundType2_playDate: number | null;
  roundType2_presentCode1: number | null;
  roundType2_presentCode2: number | null;
  roundType2_presentCode3: number | null;
  roundType2_presentCode4: number | null;
  roundType3_playDate: number | null;
  roundType3_presentCode1: number | null;
  roundType3_presentCode2: number | null;
  roundType3_presentCode3: number | null;
  roundType3_presentCode4: number | null;
  roundType4_playDate: number | null;
  roundType4_presentCode1: number | null;
  roundType4_presentCode2: number | null;
  roundType4_presentCode3: number | null;
  roundType4_presentCode4: number | null;
  roundType5_playDate: number | null;
  roundType5_presentCode1: number | null;
  roundType5_presentCode2: number | null;
  roundType5_presentCode3: number | null;
  roundType5_presentCode4: number | null;
  roundType6_playDate: number | null;
  roundType6_presentCode1: number | null;
  roundType6_presentCode2: number | null;
  roundType6_presentCode3: number | null;
  roundType6_presentCode4: number | null;
  roundType7_playDate: number | null;
  roundType7_presentCode1: number | null;
  roundType7_presentCode2: number | null;
  roundType7_presentCode3: number | null;
  roundType7_presentCode4: number | null;
  roundType8_playDate: number | null;
  roundType8_presentCode1: number | null;
  roundType8_presentCode2: number | null;
  roundType8_presentCode3: number | null;
  roundType8_presentCode4: number | null;
  roundType9_playDate: number | null;
  roundType9_presentCode1: number | null;
  roundType9_presentCode2: number | null;
  roundType9_presentCode3: number | null;
  roundType9_presentCode4: number | null;
}

export interface LogLeagueTeam {
  cheerPoint: number | null;
  currentRound: number | null;
  factionPoint: number | null;
  factionType: number | null;
  idx: Generated<number>;
  insertDate: Generated<Date>;
  leaderIDX: number | null;
  leagueIDX: number | null;
  leaguePosition: number | null;
  leagueStartPosition: Generated<number | null>;
  maxcount: number | null;
  regDate: Date | null;
  startDate: number | null;
  teamIDX: number | null;
  teamName: string | null;
}

export interface LogLeagueTeamMember {
  accountIDX: number | null;
  idx: Generated<number>;
  insertDate: Generated<Date>;
  joinType: number | null;
  leagueIDX: number | null;
  regDate: Date | null;
  startDate: number | null;
  teamIDX: number | null;
  teamMemberIDX: number | null;
}

export interface LogLeagueTeamMemberUser {
  accountIDX: number;
  idx: Generated<number>;
  insertDate: Generated<Date>;
  joinType: number;
  leagueIDX: number;
  regDate: Date;
  startDate: number;
  teamIDX: number;
  teamMemberIDX: number;
}

export interface LogLeagueTeamUser {
  cheerPoint: number | null;
  currentRound: number | null;
  factionPoint: number | null;
  factionType: number | null;
  idx: Generated<number>;
  insertDate: Generated<Date>;
  leaderIDX: number | null;
  leagueIDX: number | null;
  leaguePosition: number | null;
  leagueStartPosition: number | null;
  maxcount: number | null;
  regDate: Date | null;
  startDate: number | null;
  teamIDX: number | null;
  teamName: string | null;
}

export interface LogLevelPlaytime {
  idx: Generated<number>;
  playTime: Generated<number>;
  regDate: Generated<Date>;
  userLevel: Generated<number>;
}

export interface LogMannerpoint {
  chatInfo: string | null;
  flag: Generated<number>;
  idx: Generated<number>;
  modeType: number;
  note: string | null;
  playType: number;
  reason: string | null;
  receiveIDX: string | null;
  receiveNick: string | null;
  receivepubIP: string;
  regDate: Date;
  reportIDX: number | null;
  reportNick: string | null;
  reportpriIP: string;
  reportpubIP: string;
  resultType: Generated<number>;
  roomInfo: string | null;
  sub1Type: number;
  sub2Type: number;
}

export interface LogMannerpointSitevisit {
  accountIDX: number;
  idx: Generated<number>;
  point: number;
  regDate: Date;
  userIP: string;
}

export interface LogTooniMigration {
  AccountIDX: number;
  idx: Generated<number>;
  RegDate: Generated<Date>;
  TooniID: string;
  TooniIDX: number;
}

export interface LosaGame_Log {
  log_cash: LogCash;
  log_class_buytime: LogClassBuytime;
  log_class_rental_history: LogClassRentalHistory;
  log_data_clover: LogDataClover;
  log_event_marble: LogEventMarble;
  log_event_openbeta_coin: LogEventOpenbetaCoin;
  log_guild_mark: LogGuildMark;
  log_league_cheer: LogLeagueCheer;
  log_league_info_user: LogLeagueInfoUser;
  log_league_list: LogLeagueList;
  log_league_list_user: LogLeagueListUser;
  log_league_round_user: LogLeagueRoundUser;
  log_league_team: LogLeagueTeam;
  log_league_team_member: LogLeagueTeamMember;
  log_league_team_member_user: LogLeagueTeamMemberUser;
  log_league_team_user: LogLeagueTeamUser;
  log_level_playtime: LogLevelPlaytime;
  log_mannerpoint: LogMannerpoint;
  log_mannerpoint_sitevisit: LogMannerpointSitevisit;
  log_tooni_migration: LogTooniMigration;
}
